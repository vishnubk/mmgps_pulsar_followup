//Pipeline defaults
params {

// Target to Followup
target_name = "J0917-4413"

beam_name = ""
period_start = "0.0528"
period_end = "0.061"

//UTC Date Format: yyyy-mm-dd
utc_start = ""
utc_end = ""
db_query = "${baseDir}/find_raw_filterbank_based_on_source_name.py"
ptuse_path_creater = "${baseDir}/create_ptuse_data_paths.py"

// Singularity Images 
pulsarx_singularity_image = "/homes/vishnu/singularity_images/pulsarx_latest.sif"
search_singularity_image = "/homes/ebarr/singularity_images/fbfhn01.mpifr-be.mkat.karoo.kat.ac.za_7000_trapum_search:cuda10.2-20211008-2021-10-08-0326eec5797c.simg"
sql_query_image = "/homes/vishnu/singularity_images/mmgps_sql_latest.sif"
fold_singularity_image = "/homes/vishnu/singularity_images/trapum_pulsarx_fold_docker_20220411.sif"
clfd_singularity_image = "/homes/vishnu/singularity_images/trapum_pulsarx_fold_docker_20220411.sif"
digifil_singularity_image = "/homes/vishnu/singularity_images/pulsar_folder_latest.sif"


//Digifil Arguments 
nbits = 8
digifil_threads = 12
digifil_decimate_time_ptuse = 1
digifil_decimate_time_apsuse = 1
//Digifil has a bug with frequency decimation, so this feature is not used yet.
digifil_decimate_freq = 16


// Filtool Arguments (Stays the same for APSUSE and PTUSE)
telescope = "meerkat"
filtool_rfi_filter = "zdot"
filtool_threads = 1
//Do you want to use filtool to clean your observations for APSUSE observations? 1=yes, 0=no 
use_filtool_apsuse = 1
//Do you want to use filtool to clean your observations for PTUSE observations? 1=yes, 0=no. Currently not supported
use_filtool_ptuse = 0


phase_predictor = "${baseDir}/create_phase_predictor_dspsr_peasoup_period_range_cands.py"

// Peasoup Arguments. Stays the same for APSUSE and PTUSE observations. Code figures out the right power of two size for FFT.
min_snr = "8.0"
acc_start = "-10.0"
acc_end = "10.0"
ram_limit_gb = "50.0"
nh = "4"
ngpus = "1"
total_cands_limit = "100000"
dm_file = "${baseDir}/dm_range_peasoup.sh"


//clfd
//Do you want to use clfd to clean your archives? 1=yes, 0=no 
use_clfd = 0
qmask = 2.0
qspike = 4.0
clfd_processes = 4

//pdmp
nchan = 32
nsubint = 5
nbins = 128

//Do you want to search APSUSE observations and fold with a phase predictor using dspsr? 1=yes, 0=no 
APSUSE_SEARCH = 0
dspsr_apsuse_threads = 12
dspsr_apsuse_subint_length = 5
dspsr_apsuse_bins = 128
//Do you want the code to parallely fold every single candidate that matches your period range. This will submit a single job per candidate fold.
//If your analysing few observations, this is a useful feature to have. However, if your searching across several beams/observations, folding serially will be faster than submitting thousands of jobs.
parallel_fold = 1 
//Do you want to fold APSUSE observations with a TIMING Ephemeries, i.e no search? 1=yes, 0=no 
APSUSE_EPH_FOLD = 0
ephemeris_files_dir = "${baseDir}"

//Do you want to search PTUSE observations and fold with a phase predictor using dspsr? 1=yes, 0=no 
PTUSE_SEARCH = 0
//Do you want to fold PTUSE observations with a TIMING Ephemeries, i.e no search? 1=yes, 0=no. Fill the ephemeris_file argument above.
PTUSE_EPH_FOLD = 1
dspsr_ptuse_threads = 12
dspsr_ptuse_subint_length = 2
dspsr_ptuse_bins = 2048

// PTUSE_DIR_TO_SEARCH
PTUSE1 = "/beegfs/DATA/MeerTIME/SCI-20200703-MK-01/search"
PTUSE2 = "/beegfs/DATA/PTUSE/SCI-20200703-MK-01/search/4"
ptuse_dir1 = "/beegfs/DATA/MeerTIME/SCI-20200703-MK-01/search"
ptuse_dir2 = "/beegfs/DATA/PTUSE/SCI-20200703-MK-{01,02}/search"
//PTUSE_DATA_DIR = "/beegfs/DATA/{MeerTIME,PTUSE}/SCI-20200703-MK-{01,02}/search/" 
}


process {


    withName: apsuse_fold_phase_predictor_parallel {

        publishDir = [
            path: "TIMING/${params.target_name}/00_APSUSE_SEARCH_FOLDS/",
            pattern: "*.ar",
            mode: 'copy',
        ]
    }

    withName: apsuse_fold_phase_predictor_serial {

        publishDir = [
            path: "TIMING/${params.target_name}/00_APSUSE_SEARCH_FOLDS/",
            pattern: "*.ar",
            mode: 'copy',
        ]
    }

    withName: ptuse_fold_phase_predictor {

        publishDir = [
            path: "TIMING/${params.target_name}/01_PTUSE_SEARCH_FOLDS/",
            pattern: "*.ar",
            mode: 'copy',
        ]
    }

    withName: apsuse_fold_ephemeris {

        publishDir = [
            path: "TIMING/${params.target_name}/00_APSUSE_EPH_FOLDS/",
            pattern: "*.ar",
            mode: 'copy',
        ]
    }

    withName: ptuse_fold_ephemeris {

        publishDir = [
            path: "TIMING/${params.target_name}/01_PTUSE_EPH_FOLDS/",
            pattern: "*.ar",
            mode: 'copy',
        ]
    }
    
    withName: clfd_apsuse_predictor {

        publishDir = [
            path: "TIMING/${params.target_name}/00_APSUSE_SEARCH_FOLDS/",
            pattern: "*.clfd",
            mode: 'copy',
        ]
    }

     withName: clfd_apsuse_eph {

        publishDir = [
            path: "TIMING/${params.target_name}/00_APSUSE_EPH_FOLDS/",
            pattern: "*.clfd",
            mode: 'copy',
        ]
    }

    withName: clfd_ptuse_predictor {

        publishDir = [
            path: "TIMING/${params.target_name}/01_PTUSE_SEARCH_FOLDS/",
            pattern: "*.clfd",
            mode: 'copy',
        ]
    }

    withName: clfd_ptuse_eph {

        publishDir = [
            path: "TIMING/${params.target_name}/01_PTUSE_EPH_FOLDS/",
            pattern: "*.clfd",
            mode: 'copy',
        ]
    }

    withName: pdmp_apsuse_predictor {

    publishDir = [
        path: "TIMING/${params.target_name}/00_APSUSE_SEARCH_FOLDS/",
        pattern: "*.png",
        mode: 'copy',
    ]
    }

    withName: pdmp_apsuse_eph {

    publishDir = [
        path: "TIMING/${params.target_name}/00_APSUSE_EPH_FOLDS/",
        pattern: "*.png",
        mode: 'copy',
    ]
}

    withName: pdmp_ptuse_predictor {

        publishDir = [
            path: "TIMING/${params.target_name}/01_PTUSE_SEARCH_FOLDS/",
            pattern: "*.png",
            mode: 'copy',
        ]
    }

    withName: pdmp_ptuse_eph {

        publishDir = [
            path: "TIMING/${params.target_name}/01_PTUSE_EPH_FOLDS/",
            pattern: "*.png",
            mode: 'copy',
        ]
    }

    // withName: filtool_apsuse {

    //     publishDir = [
    //         path: "SEARCH/${params.target_name}/APSUSE/",
    //         pattern: "*.fil",
    //         mode: 'copy',
    //     ]
    // }
    
    // If one observation fails, it will only stop downstream processes, but not the other independent proccess
    errorStrategy = 'ignore'

   
}

profiles {
   local {
    includeConfig 'local.config'   
 }
   condor {
    includeConfig 'condor.config'
   }
}
