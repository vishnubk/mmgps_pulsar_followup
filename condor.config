
singularity {
        enabled = true
        runOptions = '-B /beegfs:/beegfs -B /homes:/homes --nv'
        envWhitelist = 'SINGULARITY_BINDPATH, SINGULARITY_LD_LIBRARY_PATH'
    }


// HTcondor Executor for APSUSE Cluster 

  process {
    executor = 'condor'

    withLabel: 'query_db' {
        cpus = 1
        memory = '5 GB'
        time = '1h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }

    withLabel: 'filtool' {
        cpus = 6
        memory = '90 GB'
        time = '6h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }

    withLabel: 'create_phase_predictor' {
        cpus = 1
        memory = '5 GB'
        time = '1h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }

    withLabel: 'nearest_power_two' {
        cpus = 1
        memory = '5 GB'
        time = '1h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
        
    }

    withLabel: 'peasoup' {
        cpus = 1
        memory = '50 GB'
        time = '3h'
        clusterOptions = 'request_gpus = 1; requirements = regexp(".*apspn*", Machine)'
        
    }

    withLabel: 'fold_phase_predictor' {
        cpus = 6
        memory = '40 GB'
        time = '8h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
       
    }

  withLabel: 'fold_ephemeris' {
    cpus = 4
    memory = { 30.GB * task.attempt } 
    time = { 60.hour * task.attempt }
    errorStrategy = { task.exitStatus in [1, 140] ? 'retry' : 'ignore' }
    maxRetries = 2
    clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
}

    withLabel: 'clfd' {
        cpus = 4
        memory = { 30.GB * task.attempt } 
        time = { 20.hour * task.attempt }
        errorStrategy = { task.exitStatus in [1, 140] ? 'retry' : 'ignore' }
        maxRetries = 2
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }
    withLabel: 'pdmp' {
        cpus = 1
        memory = '40 GB'
        time = '2h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }

    withLabel: 'pam' {
        cpus = 1
        memory = '40 GB'
        time = '12h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }

    withLabel: 'digifil' {
        cpus = 6
        memory = '50 GB'
        time = '8h'
        clusterOptions = 'requirements = regexp(".*apspn*", Machine)'
    }
    errorStrategy = 'ignore'
}
